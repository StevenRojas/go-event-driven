// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: protos/collectors/generic.proto

package collectors

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// List of possible credential types to use by an API collector
type ApiCredentialEnum int32

const (
	ApiCredentialEnum_INVALID ApiCredentialEnum = 0
	ApiCredentialEnum_UNSET   ApiCredentialEnum = 1
	ApiCredentialEnum_KEY     ApiCredentialEnum = 2
	ApiCredentialEnum_JWT     ApiCredentialEnum = 3
	ApiCredentialEnum_EMPTY   ApiCredentialEnum = 4
)

// Enum value maps for ApiCredentialEnum.
var (
	ApiCredentialEnum_name = map[int32]string{
		0: "INVALID",
		1: "UNSET",
		2: "KEY",
		3: "JWT",
		4: "EMPTY",
	}
	ApiCredentialEnum_value = map[string]int32{
		"INVALID": 0,
		"UNSET":   1,
		"KEY":     2,
		"JWT":     3,
		"EMPTY":   4,
	}
)

func (x ApiCredentialEnum) Enum() *ApiCredentialEnum {
	p := new(ApiCredentialEnum)
	*p = x
	return p
}

func (x ApiCredentialEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiCredentialEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_collectors_generic_proto_enumTypes[0].Descriptor()
}

func (ApiCredentialEnum) Type() protoreflect.EnumType {
	return &file_protos_collectors_generic_proto_enumTypes[0]
}

func (x ApiCredentialEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiCredentialEnum.Descriptor instead.
func (ApiCredentialEnum) EnumDescriptor() ([]byte, []int) {
	return file_protos_collectors_generic_proto_rawDescGZIP(), []int{0}
}

// API key
type ApiKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ApiKey) Reset() {
	*x = ApiKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_collectors_generic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKey) ProtoMessage() {}

func (x *ApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_protos_collectors_generic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKey.ProtoReflect.Descriptor instead.
func (*ApiKey) Descriptor() ([]byte, []int) {
	return file_protos_collectors_generic_proto_rawDescGZIP(), []int{0}
}

func (x *ApiKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// API JWT
type ApiJwt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JWT string
	Jwt string `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	// if bearer prefix should be used or not
	Bearer bool `protobuf:"varint,2,opt,name=bearer,proto3" json:"bearer,omitempty"`
}

func (x *ApiJwt) Reset() {
	*x = ApiJwt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_collectors_generic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiJwt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiJwt) ProtoMessage() {}

func (x *ApiJwt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_collectors_generic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiJwt.ProtoReflect.Descriptor instead.
func (*ApiJwt) Descriptor() ([]byte, []int) {
	return file_protos_collectors_generic_proto_rawDescGZIP(), []int{1}
}

func (x *ApiJwt) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

func (x *ApiJwt) GetBearer() bool {
	if x != nil {
		return x.Bearer
	}
	return false
}

// Pagination information
type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// start record
	Start int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// number of records to get in a single call
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_collectors_generic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_protos_collectors_generic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_protos_collectors_generic_proto_rawDescGZIP(), []int{2}
}

func (x *Pagination) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query name, used to map the results of the query
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// SQL to be executed to collect the data
	Sql string `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	// if pagination is used. If so, the collector will send the collected data into the messaging queue in batches
	UsePagination bool `protobuf:"varint,3,opt,name=use_pagination,json=usePagination,proto3" json:"use_pagination,omitempty"`
	// Pagination info
	Pagination *Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_collectors_generic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_protos_collectors_generic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_protos_collectors_generic_proto_rawDescGZIP(), []int{3}
}

func (x *Query) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Query) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *Query) GetUsePagination() bool {
	if x != nil {
		return x.UsePagination
	}
	return false
}

func (x *Query) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Response data. The concrete type is defined at mappers.proto file
// The collector and generator services uses the concrete type to handle the data
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mapper *any.Any `protobuf:"bytes,1,opt,name=mapper,proto3" json:"mapper,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_collectors_generic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_protos_collectors_generic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_protos_collectors_generic_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetMapper() *any.Any {
	if x != nil {
		return x.Mapper
	}
	return nil
}

type ApiCollectorTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instance name, used for monitoring
	Instance string `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	// API endpoint
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// REST method
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	// Cretendial type to use
	CredentialType ApiCredentialEnum `protobuf:"varint,4,opt,name=credential_type,json=credentialType,proto3,enum=collectors.ApiCredentialEnum" json:"credential_type,omitempty"`
	// credential struct with the information needed to authenticate the API call
	//
	// Types that are assignable to Credendial:
	//	*ApiCollectorTask_ApiKey
	//	*ApiCollectorTask_ApiJwt
	Credendial isApiCollectorTask_Credendial `protobuf_oneof:"credendial"`
	// Map of headers that should be included in the API call
	Headers map[string]string `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// if pagination is used. If so, the collector will send the collected data into the messaging queue in batches
	UsePagination bool `protobuf:"varint,8,opt,name=use_pagination,json=usePagination,proto3" json:"use_pagination,omitempty"`
	// Pagination info
	Pagination *Pagination `protobuf:"bytes,9,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// If cache should be used. If so, the collector will try to find the data in cache.
	// TODO: Needs to define cache eviction policies
	UseCache bool `protobuf:"varint,10,opt,name=use_cache,json=useCache,proto3" json:"use_cache,omitempty"`
	// Response structure that will be sent to the messaging queue
	Response *Response `protobuf:"bytes,11,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ApiCollectorTask) Reset() {
	*x = ApiCollectorTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_collectors_generic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiCollectorTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiCollectorTask) ProtoMessage() {}

func (x *ApiCollectorTask) ProtoReflect() protoreflect.Message {
	mi := &file_protos_collectors_generic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiCollectorTask.ProtoReflect.Descriptor instead.
func (*ApiCollectorTask) Descriptor() ([]byte, []int) {
	return file_protos_collectors_generic_proto_rawDescGZIP(), []int{5}
}

func (x *ApiCollectorTask) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *ApiCollectorTask) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ApiCollectorTask) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiCollectorTask) GetCredentialType() ApiCredentialEnum {
	if x != nil {
		return x.CredentialType
	}
	return ApiCredentialEnum_INVALID
}

func (m *ApiCollectorTask) GetCredendial() isApiCollectorTask_Credendial {
	if m != nil {
		return m.Credendial
	}
	return nil
}

func (x *ApiCollectorTask) GetApiKey() *ApiKey {
	if x, ok := x.GetCredendial().(*ApiCollectorTask_ApiKey); ok {
		return x.ApiKey
	}
	return nil
}

func (x *ApiCollectorTask) GetApiJwt() *ApiJwt {
	if x, ok := x.GetCredendial().(*ApiCollectorTask_ApiJwt); ok {
		return x.ApiJwt
	}
	return nil
}

func (x *ApiCollectorTask) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ApiCollectorTask) GetUsePagination() bool {
	if x != nil {
		return x.UsePagination
	}
	return false
}

func (x *ApiCollectorTask) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ApiCollectorTask) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

func (x *ApiCollectorTask) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type isApiCollectorTask_Credendial interface {
	isApiCollectorTask_Credendial()
}

type ApiCollectorTask_ApiKey struct {
	ApiKey *ApiKey `protobuf:"bytes,5,opt,name=apiKey,proto3,oneof"`
}

type ApiCollectorTask_ApiJwt struct {
	ApiJwt *ApiJwt `protobuf:"bytes,6,opt,name=apiJwt,proto3,oneof"`
}

func (*ApiCollectorTask_ApiKey) isApiCollectorTask_Credendial() {}

func (*ApiCollectorTask_ApiJwt) isApiCollectorTask_Credendial() {}

type MysqlCollectorTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instance name, used for monitoring
	Instance string `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	// The credentials ID is an identifier that will be used by the collector in order to know which credentials use
	// The credentials are stored in the collector services to avoid send them over the wire
	CredentialsId string `protobuf:"bytes,2,opt,name=credentials_id,json=credentialsId,proto3" json:"credentials_id,omitempty"`
	// Database name
	DbName string `protobuf:"bytes,3,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	// List of queries that should be performed
	QueryList []*Query `protobuf:"bytes,4,rep,name=query_list,json=queryList,proto3" json:"query_list,omitempty"`
	// If cache should be used. If so, the collector will try to find the data in cache.
	UseCache bool `protobuf:"varint,5,opt,name=use_cache,json=useCache,proto3" json:"use_cache,omitempty"`
	// Response structure that will be sent to the messaging queue
	Response *Response `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *MysqlCollectorTask) Reset() {
	*x = MysqlCollectorTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_collectors_generic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlCollectorTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlCollectorTask) ProtoMessage() {}

func (x *MysqlCollectorTask) ProtoReflect() protoreflect.Message {
	mi := &file_protos_collectors_generic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlCollectorTask.ProtoReflect.Descriptor instead.
func (*MysqlCollectorTask) Descriptor() ([]byte, []int) {
	return file_protos_collectors_generic_proto_rawDescGZIP(), []int{6}
}

func (x *MysqlCollectorTask) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *MysqlCollectorTask) GetCredentialsId() string {
	if x != nil {
		return x.CredentialsId
	}
	return ""
}

func (x *MysqlCollectorTask) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *MysqlCollectorTask) GetQueryList() []*Query {
	if x != nil {
		return x.QueryList
	}
	return nil
}

func (x *MysqlCollectorTask) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

func (x *MysqlCollectorTask) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_protos_collectors_generic_proto protoreflect.FileDescriptor

var file_protos_collectors_generic_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x06, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x32, 0x0a, 0x06, 0x41, 0x70, 0x69, 0x4a, 0x77, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x71, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0xb9, 0x04, 0x0a, 0x10,
	0x41, 0x70, 0x69, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x46, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x41, 0x70, 0x69,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0e,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x06,
	0x61, 0x70, 0x69, 0x4a, 0x77, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4a, 0x77, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4a, 0x77, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x3a, 0x0a,
	0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x64, 0x69, 0x61, 0x6c, 0x22, 0xf1, 0x01, 0x0a, 0x12, 0x4d, 0x79, 0x73, 0x71,
	0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x48, 0x0a, 0x11, 0x41,
	0x70, 0x69, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x45, 0x59, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d,
	0x50, 0x54, 0x59, 0x10, 0x04, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protos_collectors_generic_proto_rawDescOnce sync.Once
	file_protos_collectors_generic_proto_rawDescData = file_protos_collectors_generic_proto_rawDesc
)

func file_protos_collectors_generic_proto_rawDescGZIP() []byte {
	file_protos_collectors_generic_proto_rawDescOnce.Do(func() {
		file_protos_collectors_generic_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_collectors_generic_proto_rawDescData)
	})
	return file_protos_collectors_generic_proto_rawDescData
}

var file_protos_collectors_generic_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_collectors_generic_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protos_collectors_generic_proto_goTypes = []interface{}{
	(ApiCredentialEnum)(0),     // 0: collectors.ApiCredentialEnum
	(*ApiKey)(nil),             // 1: collectors.ApiKey
	(*ApiJwt)(nil),             // 2: collectors.ApiJwt
	(*Pagination)(nil),         // 3: collectors.Pagination
	(*Query)(nil),              // 4: collectors.Query
	(*Response)(nil),           // 5: collectors.Response
	(*ApiCollectorTask)(nil),   // 6: collectors.ApiCollectorTask
	(*MysqlCollectorTask)(nil), // 7: collectors.MysqlCollectorTask
	nil,                        // 8: collectors.ApiCollectorTask.HeadersEntry
	(*any.Any)(nil),            // 9: google.protobuf.Any
}
var file_protos_collectors_generic_proto_depIdxs = []int32{
	3,  // 0: collectors.Query.pagination:type_name -> collectors.Pagination
	9,  // 1: collectors.Response.mapper:type_name -> google.protobuf.Any
	0,  // 2: collectors.ApiCollectorTask.credential_type:type_name -> collectors.ApiCredentialEnum
	1,  // 3: collectors.ApiCollectorTask.apiKey:type_name -> collectors.ApiKey
	2,  // 4: collectors.ApiCollectorTask.apiJwt:type_name -> collectors.ApiJwt
	8,  // 5: collectors.ApiCollectorTask.headers:type_name -> collectors.ApiCollectorTask.HeadersEntry
	3,  // 6: collectors.ApiCollectorTask.pagination:type_name -> collectors.Pagination
	5,  // 7: collectors.ApiCollectorTask.response:type_name -> collectors.Response
	4,  // 8: collectors.MysqlCollectorTask.query_list:type_name -> collectors.Query
	5,  // 9: collectors.MysqlCollectorTask.response:type_name -> collectors.Response
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_protos_collectors_generic_proto_init() }
func file_protos_collectors_generic_proto_init() {
	if File_protos_collectors_generic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_collectors_generic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_collectors_generic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiJwt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_collectors_generic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_collectors_generic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_collectors_generic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_collectors_generic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiCollectorTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_collectors_generic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlCollectorTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_collectors_generic_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ApiCollectorTask_ApiKey)(nil),
		(*ApiCollectorTask_ApiJwt)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_collectors_generic_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_collectors_generic_proto_goTypes,
		DependencyIndexes: file_protos_collectors_generic_proto_depIdxs,
		EnumInfos:         file_protos_collectors_generic_proto_enumTypes,
		MessageInfos:      file_protos_collectors_generic_proto_msgTypes,
	}.Build()
	File_protos_collectors_generic_proto = out.File
	file_protos_collectors_generic_proto_rawDesc = nil
	file_protos_collectors_generic_proto_goTypes = nil
	file_protos_collectors_generic_proto_depIdxs = nil
}
